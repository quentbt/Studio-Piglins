ALTER TABLE employe ADD salaire float;
ALTER TABLE collab ADD nom VARCHAR(50);
UPDATE employe SET salaire = 4500 WHERE id_employe = 2;
DELETE FROM projet WHERE id_projet = 1;
DROP TABLE a_suppr;
SELECT * FROM projet WHERE cout > 30000 LIMIT 2;
SELECT SUM(cout) AS cout FROM projet GROUP BY id_client;
SELECT * FROM projet ORDER BY nbr_employe;
SELECT * FROM projet INNER JOIN clients WHERE id_projet = 2;
SELECT DISTINCT (cout*quantite) AS montant_total FROM materiel HAVING montant_total > 15000;
EXPLAIN SELECT * FROM projet;
CREATE TABLE projet2(
	id_projet INT PRIMARY KEY AUTO_INCREMENT,
	cout float NOT NULL,
	date_debut DATE,
	date_fin DATE,
	nbr_employe INT NOT NULL,
    description VARCHAR(100),
    type_projet VARCHAR(50),
    image VARCHAR(255),
    id_client INT
);
SELECT * FROM projet
UNION
SELECT * FROM projet2;
SELECT * FROM projet where cout LIKE "%1";
SELECT id_materiel,cout,type_materiel,quantite,
    CASE 
      WHEN cout=1000 THEN 'Prix ordinaire'
      WHEN cout>1000 THEN 'Prix supérieur à la normale'
      ELSE 'Prix inférieur à la normale'
    END
FROM materiel;
TRUNCATE TABLE projet2;
SELECT * FROM materiel WHERE quantite BETWEEN 1 AND 20;
SELECT * FROM employe WHERE salaire IN (1800, 3000, 1500);
DELIMITER //

CREATE PROCEDURE AjouterEmployeAProjet(IN p_id_projet INT, IN p_id_employe INT)
BEGIN
    INSERT INTO employe_projet (id_projet, id_employe)
    VALUES (p_id_projet, p_id_employe);
END //

DELIMITER ;
CREATE VIEW VueDisponibiliteMateriel AS
SELECT
    mp.id_projet,
    m.type_materiel,
    m.quantite - COALESCE(SUM(mp.quantite), 0) AS quantite_disponible
FROM
    materiel m
    LEFT JOIN materiel_projet mp ON m.id_materiel = mp.id_materiel
GROUP BY
    mp.id_projet, m.id_materiel;

